#!/usr/bin/env bash

install_scripts_completed=""

LOGDIR="$(mktemp -d)"
export LOGDIR

depends_on() {
  # shellcheck disable=SC2046
  if [ $(command -v yay) ]; then
    # shellcheck disable=SC2068
    yay -S --noconfirm --needed $@
  else
    # shellcheck disable=SC2068
    sudo pacman -S --noconfirm --needed $@
  fi
}

show_output() {
  while read -r line; do
    echo "$line" >"$LOGDIR/$1.log"
    line_truncated="$(printf '%s' "$line" | sed 's/\(.\{32\}\).*/\1.../')"
    printf '\e[0;36m[ ] %s\e[0;0m %s                                \r' "$1" "$line_truncated"
  done
}

run_install_script() {
  if [ -f "./install.d/$1.sh" ]; then
    if ! echo "$install_scripts_completed" | grep -q "$1"; then
      error=""
      # shellcheck disable=SC1090
      . "./install.d/$1.sh"

      needs_install && setup 2>&1 | show_output "$1" || error="(setup failed)"
      postinstall 2>&1 | show_output "$1" || error="(postinstall failed)"

      install_scripts_completed="$install_scripts_completed $1"

      if [ -z "$error" ]; then
        printf '\033[2K\e[0;36m[âœ“] %s\e[0;0m\n' "$1"
      else
        printf '\033[2K\e[0;31m[x] %s\e[0;0m %s\n' "$1" "$error"
      fi
    fi
  else
    echo "No such file ./install.d/$1.sh"
  fi
}

pre_install() {
  for file in "$@"; do
    run_install_script "$file"
  done
}

insecure_prompt() {
  printf '%s' "$1" >/dev/stderr
  read -r SECURESTRING
  printf '%s' "$SECURESTRING"
}

secure_prompt() {
  printf '%s' "$1" >/dev/stderr
  stty -echo
  read -r SECURESTRING
  stty echo
  printf '\n' >/dev/stderr
  printf '%s' "$SECURESTRING"
}

clone_homedir() {
  SCRIPTPATH="$(
    cd "$(dirname "$0")" || exit 1
    pwd -P
  )"
  find lib ! -path lib -type f | while read -r FILE; do
    FILE=${FILE:4}
    DIR=$(dirname "$HOME/$FILE")
    BACKUPFILE="$SCRIPTPATH/back/$FILE"
    BACKUPDIR=$(dirname "$SCRIPTPATH/back/$FILE")

    [ -d "$DIR" ] || mkdir -p "$DIR"
    [ -d "$BACKUPDIR" ] || mkdir -p "$BACKUPDIR"

    if [ -f "$HOME/$FILE" ]; then
      cp "$HOME/$FILE" "$BACKUPFILE"
      rm "$HOME/$FILE"
    fi

    ln -s -f "$SCRIPTPATH/lib/$FILE" "$HOME/$FILE" >/dev/null 2>&1
  done
}

setup_vars() {
  BW_USERNAME="$(cat "$HOME/.cache/bw/user" 2>/dev/null)"
  BW_PASSWD="$(cat "$HOME/.cache/bw/pass" 2>/dev/null)"
  BW_CLIENTSECRET="$(cat "$HOME/.cache/bw/secret" 2>/dev/null)"
  [ -z "$BW_USERNAME" ] && BW_USERNAME=$(insecure_prompt "Enter bitwarden username: ")
  [ -z "$BW_PASSWD" ] && BW_PASSWD=$(secure_prompt "Enter bitwarden password: ")
  [ -z "$BW_CLIENTSECRET" ] && BW_CLIENTSECRET=$(secure_prompt "Enter bitwarden client_secret: ")
  [ -z "$GPG_PASSWORD" ] && GPG_PASSWORD=$(secure_prompt "Enter gpg password: ")
  export BW_USERNAME BW_PASSWD BW_CLIENTSECRET GPG_PASSWORD
}

echo "Logs stored in $LOGDIR"
sudo pacman -Sy >/dev/null
clone_homedir
setup_vars

for file in ./install.d/*.sh; do
  run_install_script "$(basename "$file" .sh)"
done

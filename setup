#!/usr/bin/env bash

progress () {
    echo -e -n "\e[33m $1\e[0m\r"
}

completed () {
    echo -e -n "\e[32m $1\e[0m\n"
}

progress "Setting env vars"
SCRIPTPATH="$( cd "$(dirname "$0")" || exit 1 ; pwd -P )"
COUNT=0
FILE_CNT=$(find lib ! -path lib -type f | wc -l)
completed "Setting env vars"

# Required paths for vim and mpd
progress "Making directories"
mkdir -p ~/.vim/tmp/undo
mkdir -p ~/.vim/tmp/backup
mkdir -p ~/.vim/tmp/swap
mkdir -p ~/.config/mpd/res
mkdir -p ~/.config/mpd/res/playlists
touch ~/.config/mpd/log
completed "Making directories"

progress "Update $FILE_CNT symlinks"
# Symlink and backup all files in ./lib
find lib ! -path lib -type f | while read -r FILE; do
    FILE=${FILE:4}
    DIR=$(dirname "$HOME/$FILE")
    BACKUPFILE="$SCRIPTPATH/back/$FILE"
    BACKUPDIR=$(dirname "$SCRIPTPATH/back/$FILE")

    mkdir -p "$DIR"
    mkdir -p "$BACKUPDIR"

    if [ -f "$HOME/$FILE" ]; then
        cp "$HOME/$FILE" "$BACKUPFILE"
        rm "$HOME/$FILE"
    fi

    ln -s -f "$SCRIPTPATH/lib/$FILE" "$HOME/$FILE" >/dev/null 2>&1
    ((COUNT++))
done
completed "Update $FILE_CNT symlinks"

progress "Setup vim plug"
[[ -f ~/.vim/autoload/plug.vim ]] || curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
[[ -f ~/.local/share/nvim/site/autoload/plug.vim ]] || curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
/usr/bin/vim +PlugInstall +PlugClean[!] +qall
/usr/bin/nvim +PlugInstall +PlugClean[!] +qall
completed "Setup vim plug"

progress "Setup oh-my-zsh"
[[ -d ~/.config/.oh-my-zsh ]] || sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
[[ -d ~/.config/.oh-my-zsh/custom/plugins/zsh-autosuggestions ]] || git clone https://github.com/zsh-users/zsh-autosuggestions ~/.config/.oh-my-zsh/custom/plugins/zsh-autosuggestions
[[ -d ~/.config/.oh-my-zsh/custom/plugins/zsh-completions ]] || git clone https://github.com/zsh-users/zsh-completions ~/.config/.oh-my-zsh/custom/plugins/zsh-completions
[[ -d ~/.config/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ]] || git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.config/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
completed "Setup oh-my-zsh"

# VIM & NVIM plugins
progress "Setup vim language server protocol"
/usr/bin/nvim +CocInstall coc-tsserver +qall
/usr/bin/nvim +CocInstall coc-css +qall
/usr/bin/nvim +CocInstall coc-eslint +qall
/usr/bin/nvim +LspInstall bashls +qall
/usr/bin/nvim +LspInstall gopls +qall
/usr/bin/nvim +LspInstall tsserver +qall
completed "Setup vim language server protocol"

# Update font cache.
progress "Setup fonts"
fc-cache
completed "Setup fonts"

MPD_PLAYING=0
mpc | grep -q '\[playing\]' && MPD_PLAYING=1

# Setup user services.
progress "Start user services"
systemctl enable --user synccal.timer
systemctl restart --user synccal.timer
systemctl enable --user sync_music.timer
systemctl restart --user sync_music.timer
systemctl enable --user mpd.service
systemctl restart --user mpd.service
systemctl enable --user bing-wallpaper.service
systemctl restart --user bing-wallpaper.service
systemctl enable --user mbsync.timer
systemctl restart --user mbsync.timer
completed "Start user services"

if [ $MPD_PLAYING -eq 1 ]; then
    mpc -q toggle
fi

# Rebuild and restart Xmonad.
progress "Building Xmonad"
xmonad --recompile > /dev/null 2>&1
xmonad --restart
completed "Building Xmonad"
